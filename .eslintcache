[{"M:\\Media Files\\Other\\course-project-4\\code\\callmaster-frontend\\src\\App.tsx":"1","M:\\Media Files\\Other\\course-project-4\\code\\callmaster-frontend\\src\\pages\\Admin\\index.tsx":"2","M:\\Media Files\\Other\\course-project-4\\code\\callmaster-frontend\\src\\layouts\\Main.tsx":"3","M:\\Media Files\\Other\\course-project-4\\code\\callmaster-frontend\\src\\components\\UploadFile.tsx":"4","M:\\Media Files\\Other\\course-project-4\\code\\callmaster-frontend\\src\\store\\user\\index.ts":"5","M:\\Media Files\\Other\\course-project-4\\code\\callmaster-frontend\\src\\store\\user\\thunkActions.ts":"6","M:\\Media Files\\Other\\course-project-4\\code\\callmaster-frontend\\src\\pages\\auth\\Login.tsx":"7","M:\\Media Files\\Other\\course-project-4\\code\\callmaster-frontend\\src\\pages\\Chat\\Body.tsx":"8","M:\\Media Files\\Other\\course-project-4\\code\\callmaster-frontend\\src\\pages\\Chat\\Side.tsx":"9","M:\\Media Files\\Other\\course-project-4\\code\\callmaster-frontend\\src\\pages\\Chat\\index.tsx":"10","M:\\Media Files\\Other\\course-project-4\\code\\callmaster-frontend\\src\\pages\\Chat\\Message.tsx":"11","M:\\Media Files\\Other\\course-project-4\\code\\callmaster-frontend\\src\\routes\\Hoc.tsx":"12","M:\\Media Files\\Other\\course-project-4\\code\\callmaster-frontend\\src\\utils\\index.ts":"13","M:\\Media Files\\Other\\course-project-4\\code\\callmaster-frontend\\src\\store\\core\\index.ts":"14","M:\\Media Files\\Other\\course-project-4\\code\\callmaster-frontend\\src\\store\\core\\thunkActions.ts":"15","M:\\Media Files\\Other\\course-project-4\\code\\callmaster-frontend\\src\\store\\index.ts":"16"},{"size":1046,"mtime":1622037401832,"results":"17","hashOfConfig":"18"},{"size":398,"mtime":1607874808378,"results":"19","hashOfConfig":"18"},{"size":4203,"mtime":1622014719154,"results":"20","hashOfConfig":"18"},{"size":2905,"mtime":1622015445649,"results":"21","hashOfConfig":"18"},{"size":769,"mtime":1622037247962,"results":"22","hashOfConfig":"18"},{"size":1435,"mtime":1622037056329,"results":"23","hashOfConfig":"18"},{"size":3410,"mtime":1622038399516,"results":"24","hashOfConfig":"18"},{"size":7172,"mtime":1622015356992,"results":"25","hashOfConfig":"18"},{"size":5112,"mtime":1622029443772,"results":"26","hashOfConfig":"18"},{"size":6992,"mtime":1622039390826,"results":"27","hashOfConfig":"18"},{"size":1536,"mtime":1622015044761,"results":"28","hashOfConfig":"18"},{"size":846,"mtime":1622015174307,"results":"29","hashOfConfig":"18"},{"size":902,"mtime":1622015474167,"results":"30","hashOfConfig":"18"},{"size":499,"mtime":1622037255022,"results":"31","hashOfConfig":"18"},{"size":423,"mtime":1622038412770,"results":"32","hashOfConfig":"18"},{"size":1092,"mtime":1622038104319,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"np60tu",{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"M:\\Media Files\\Other\\course-project-4\\code\\callmaster-frontend\\src\\App.tsx",[],"M:\\Media Files\\Other\\course-project-4\\code\\callmaster-frontend\\src\\pages\\Admin\\index.tsx",[],"M:\\Media Files\\Other\\course-project-4\\code\\callmaster-frontend\\src\\layouts\\Main.tsx",[],"M:\\Media Files\\Other\\course-project-4\\code\\callmaster-frontend\\src\\components\\UploadFile.tsx",["67","68","69","70"],"M:\\Media Files\\Other\\course-project-4\\code\\callmaster-frontend\\src\\store\\user\\index.ts",[],"M:\\Media Files\\Other\\course-project-4\\code\\callmaster-frontend\\src\\store\\user\\thunkActions.ts",[],"M:\\Media Files\\Other\\course-project-4\\code\\callmaster-frontend\\src\\pages\\auth\\Login.tsx",["71"],"M:\\Media Files\\Other\\course-project-4\\code\\callmaster-frontend\\src\\pages\\Chat\\Body.tsx",["72","73"],"M:\\Media Files\\Other\\course-project-4\\code\\callmaster-frontend\\src\\pages\\Chat\\Side.tsx",["74","75"],"import { UserOutlined } from '@ant-design/icons';\r\nimport { Input } from 'antd';\r\nimport Avatar from 'antd/lib/avatar/avatar';\r\nimport clsx from 'clsx';\r\nimport moment from 'moment';\r\nimport React, { useEffect, useMemo, useState } from 'react';\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\nimport ReactLoading from 'react-loading';\r\nimport { useTypedSelector } from 'store';\r\n\r\nimport { getReceiver } from 'utils';\r\nimport apiClient from 'utils/apiClient';\r\n\r\nimport { Paginated } from '@feathersjs/feathers';\r\nimport { IChat } from 'types';\r\n\r\ntype Props = {\r\n  chats: IChat[];\r\n  activeChat: Partial<IChat>;\r\n  setChats: React.Dispatch<React.SetStateAction<IChat[]>>;\r\n  onChatClick: (chat: IChat) => void;\r\n};\r\n\r\nconst Side: React.FC<Props> = ({ chats, activeChat, setChats, onChatClick }) => {\r\n  const user = useTypedSelector((state) => state.user.user);\r\n\r\n  const [hasMore, setHasMore] = useState<boolean>(true);\r\n  const [search, setSearch] = useState<string>('');\r\n\r\n  const filteredChats = useMemo(() => {\r\n    if (!search) return chats;\r\n    return chats.filter((chat) => {\r\n      const receiver = chat[getReceiver(user)];\r\n      return (\r\n        receiver?.firstName?.toLowerCase().includes(search.toLowerCase()) ||\r\n        receiver?.lastName?.toLowerCase().includes(search.toLowerCase())\r\n      );\r\n    });\r\n  }, [search, chats]);\r\n\r\n  const sortedChats = useMemo(() => {\r\n    return filteredChats.sort(\r\n      (a, b) => new Date(b.lastMessageDate).getTime() - new Date(a.lastMessageDate).getTime()\r\n    );\r\n  }, [filteredChats]);\r\n\r\n  const getUnreadMessages = (chat: IChat) =>\r\n    chat[(user.role + 'UnreadMessages') as 'clientUnreadMessages' | 'operatorUnreadMessages'];\r\n\r\n  const fetchNewChats = async () => {\r\n    const field = user.role === 'client' ? 'clientId' : 'operatorId';\r\n\r\n    const response: Paginated<IChat> = await apiClient.service('chats').find({\r\n      query: {\r\n        [field]: user._id,\r\n        $limit: 15,\r\n        $skip: chats.length,\r\n        $search: search || undefined,\r\n      },\r\n    });\r\n\r\n    const newItems = chats.concat(response.data);\r\n    setChats(newItems);\r\n\r\n    if (newItems.length >= response.total) {\r\n      setHasMore(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchChats = async () => {\r\n      const field = user.role === 'client' ? 'clientId' : 'operatorId';\r\n\r\n      const response: Paginated<IChat> = await apiClient.service('chats').find({\r\n        query: {\r\n          [field]: user._id,\r\n          $limit: 15,\r\n          $skip: 0,\r\n        },\r\n      });\r\n\r\n      console.log('chats', response);\r\n      setChats(response.data);\r\n    };\r\n\r\n    fetchChats();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"chat__side\">\r\n      <div className=\"chat__side-search\">\r\n        <Avatar src={user.avatar?.path} icon={<UserOutlined />} />\r\n        <Input placeholder=\"Поиск\" value={search} onChange={(e) => setSearch(e.target.value)} />\r\n      </div>\r\n      <h2 className=\"chat__title\">Чаты</h2>\r\n      <div className=\"chat__side-items\" id=\"scrollableContainer\">\r\n        <InfiniteScroll\r\n          dataLength={chats.length}\r\n          next={fetchNewChats}\r\n          hasMore={hasMore}\r\n          loader={\r\n            chats.length === 0 ? (\r\n              <span />\r\n            ) : (\r\n              <ReactLoading type=\"bars\" color=\"#69C262\" width=\"40px\" className=\"loading-center\" />\r\n            )\r\n          }\r\n          scrollableTarget=\"scrollableContainer\"\r\n        >\r\n          {sortedChats.map((chat) => {\r\n            return (\r\n              <div\r\n                key={chat._id}\r\n                className={clsx('chat__box', {\r\n                  'chat__box--active': chat._id === activeChat._id,\r\n                })}\r\n                onClick={() => onChatClick(chat)}\r\n              >\r\n                <div className=\"chat__box__left\">\r\n                  <Avatar src={chat[getReceiver(user)]?.avatar?.path} icon={<UserOutlined />} />\r\n                </div>\r\n                <div className=\"chat__box__center\">\r\n                  <div className=\"chat__box__name\">\r\n                    {chat[getReceiver(user)]?.firstName} {chat[getReceiver(user)]?.lastName}\r\n                  </div>\r\n                  <div className=\"chat__box__last-message\">\r\n                    {chat.lastMessage?.userId === user._id && <span>Вы:</span>}\r\n                    {chat.lastMessage?.type === 'text' && chat.lastMessage?.text}\r\n                    {chat.lastMessage?.type === 'photo' && '📥 Photo'}\r\n                  </div>\r\n                </div>\r\n                <div className=\"chat__box__right\">\r\n                  <div className=\"chat__box__time\">\r\n                    {moment(chat.lastMessage?.createdAt).format('HH:mm')}\r\n                  </div>\r\n                  {!!getUnreadMessages(chat) && (\r\n                    <div className=\"chat__box__messages-count\">{getUnreadMessages(chat)}</div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </InfiniteScroll>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Side;\r\n","M:\\Media Files\\Other\\course-project-4\\code\\callmaster-frontend\\src\\pages\\Chat\\index.tsx",["76","77","78","79","80","81","82","83","84","85"],"M:\\Media Files\\Other\\course-project-4\\code\\callmaster-frontend\\src\\pages\\Chat\\Message.tsx",[],"M:\\Media Files\\Other\\course-project-4\\code\\callmaster-frontend\\src\\routes\\Hoc.tsx",[],"M:\\Media Files\\Other\\course-project-4\\code\\callmaster-frontend\\src\\utils\\index.ts",[],"M:\\Media Files\\Other\\course-project-4\\code\\callmaster-frontend\\src\\store\\core\\index.ts",[],"M:\\Media Files\\Other\\course-project-4\\code\\callmaster-frontend\\src\\store\\core\\thunkActions.ts",[],"M:\\Media Files\\Other\\course-project-4\\code\\callmaster-frontend\\src\\store\\index.ts",[],{"ruleId":"86","severity":1,"message":"87","line":32,"column":5,"nodeType":"88","messageId":"89","endLine":32,"endColumn":16},{"ruleId":"86","severity":1,"message":"87","line":56,"column":9,"nodeType":"88","messageId":"89","endLine":56,"endColumn":20},{"ruleId":"86","severity":1,"message":"87","line":71,"column":7,"nodeType":"88","messageId":"89","endLine":71,"endColumn":18},{"ruleId":"86","severity":1,"message":"87","line":101,"column":28,"nodeType":"88","messageId":"89","endLine":101,"endColumn":39},{"ruleId":"90","severity":1,"message":"91","line":37,"column":6,"nodeType":"92","endLine":37,"endColumn":8,"suggestions":"93"},{"ruleId":"94","severity":1,"message":"95","line":25,"column":58,"nodeType":"96","messageId":"97","endLine":25,"endColumn":70},{"ruleId":"90","severity":1,"message":"98","line":127,"column":6,"nodeType":"92","endLine":127,"endColumn":28,"suggestions":"99"},{"ruleId":"90","severity":1,"message":"100","line":39,"column":6,"nodeType":"92","endLine":39,"endColumn":21,"suggestions":"101"},{"ruleId":"86","severity":1,"message":"87","line":82,"column":7,"nodeType":"88","messageId":"89","endLine":82,"endColumn":18},{"ruleId":"86","severity":1,"message":"87","line":62,"column":7,"nodeType":"88","messageId":"89","endLine":62,"endColumn":18},{"ruleId":"86","severity":1,"message":"87","line":71,"column":7,"nodeType":"88","messageId":"89","endLine":71,"endColumn":18},{"ruleId":"86","severity":1,"message":"87","line":93,"column":13,"nodeType":"88","messageId":"89","endLine":93,"endColumn":24},{"ruleId":"86","severity":1,"message":"87","line":107,"column":7,"nodeType":"88","messageId":"89","endLine":107,"endColumn":18},{"ruleId":"86","severity":1,"message":"87","line":134,"column":9,"nodeType":"88","messageId":"89","endLine":134,"endColumn":20},{"ruleId":"90","severity":1,"message":"102","line":149,"column":6,"nodeType":"92","endLine":149,"endColumn":14,"suggestions":"103"},{"ruleId":"86","severity":1,"message":"87","line":153,"column":7,"nodeType":"88","messageId":"89","endLine":153,"endColumn":18},{"ruleId":"86","severity":1,"message":"87","line":157,"column":7,"nodeType":"88","messageId":"89","endLine":157,"endColumn":18},{"ruleId":"94","severity":1,"message":"104","line":202,"column":10,"nodeType":"96","messageId":"97","endLine":202,"endColumn":24},{"ruleId":"105","severity":1,"message":"104","line":202,"column":10,"nodeType":"96","messageId":"97","endLine":202,"endColumn":24},"no-console","Unexpected console statement.","MemberExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history' and 'isAuth'. Either include them or remove the dependency array.","ArrayExpression",["106"],"no-unused-vars","'isCallActive' is defined but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'user._id'. Either include it or remove the dependency array.",["107"],"React Hook useMemo has a missing dependency: 'user'. Either include it or remove the dependency array.",["108"],"React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.",["109"],"'addVideoStream' is defined but never used.","@typescript-eslint/no-unused-vars",{"desc":"110","fix":"111"},{"desc":"112","fix":"113"},{"desc":"114","fix":"115"},{"desc":"116","fix":"117"},"Update the dependencies array to be: [history, isAuth]",{"range":"118","text":"119"},"Update the dependencies array to be: [messages, activeChat, user._id]",{"range":"120","text":"121"},"Update the dependencies array to be: [search, chats, user]",{"range":"122","text":"123"},"Update the dependencies array to be: [search, user]",{"range":"124","text":"125"},[1087,1089],"[history, isAuth]",[3805,3827],"[messages, activeChat, user._id]",[1346,1361],"[search, chats, user]",[4495,4503],"[search, user]"]